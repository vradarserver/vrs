# To learn more about .editorconfig see https://aka.ms/editorconfigdocs
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
indent_style = space
indent_size = 4

# Code files
[*.{cs,csx,js,ts,vb,vbx}]
insert_final_newline = true
charset = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = omit_if_default:silent
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################
# pascal_case_style
dotnet_naming_style.pascal_case_style.capitalization                = pascal_case

# underscore_pascal_case_style
dotnet_naming_style.underscore_pascal_case_style.required_prefix    = _
dotnet_naming_style.underscore_pascal_case_style.capitalization     = pascal_case

# interface_pascal_case_style
dotnet_naming_style.interface_pascal_case_style.required_prefix     = I
dotnet_naming_style.interface_pascal_case_style.capitalization      = pascal_case

# type_param_pascal_case_style
dotnet_naming_style.type_param_pascal_case_style.required_prefix    = T
dotnet_naming_style.type_param_pascal_case_style.capitalization     = pascal_case

# camel_case_style
dotnet_naming_style.camel_case_style.capitalization                 = camel_case

# simple_pascal_cased group - these are always pascal cased
dotnet_naming_symbols.simple_pascal_cased.applicable_kinds                  = namespace, class, struct, enum, method, event, delegate
dotnet_naming_symbols.simple_pascal_cased.applicable_accessibilities        = public, internal, private, protected, protected_internal, private_protected

# simple_camel_cased group - these are always camel cased
dotnet_naming_symbols.simple_camel_cased.applicable_kinds                   = parameter, local, local_function
dotnet_naming_symbols.simple_camel_cased.applicable_accessibilities         = *

# private_fields_and_props group - these must be underscore pascal cased
dotnet_naming_symbols.private_fields_and_props.applicable_kinds             = field, property
dotnet_naming_symbols.private_fields_and_props.applicable_accessibilities   = private, protected, protected_internal, private_protected

# public_fields_and_props group - these need to be pascal cased
dotnet_naming_symbols.public_fields_and_props.applicable_kinds              = field
dotnet_naming_symbols.public_fields_and_props.applicable_accessibilities    = public, internal

# interfaces group - these are always pascal case and prefixed with an I
dotnet_naming_symbols.interfaces.applicable_kinds                           = interface
dotnet_naming_symbols.interfaces.applicable_accessibilities                 = *

# type_params group - these are always pascal case and prefixed with an T
dotnet_naming_symbols.type_params.applicable_kinds                          = type_parameter
dotnet_naming_symbols.type_params.applicable_accessibilities                = *

# Enforce rules
dotnet_naming_rule.do_simple_pascal_cased.severity              = error
dotnet_naming_rule.do_simple_pascal_cased.symbols               = simple_pascal_cased
dotnet_naming_rule.do_simple_pascal_cased.style                 = pascal_case_style

dotnet_naming_rule.do_public_fields_and_props.severity          = error
dotnet_naming_rule.do_public_fields_and_props.symbols           = public_fields_and_props
dotnet_naming_rule.do_public_fields_and_props.style             = pascal_case_style

dotnet_naming_rule.do_private_fields_and_props.severity         = error
dotnet_naming_rule.do_private_fields_and_props.symbols          = private_fields_and_props
dotnet_naming_rule.do_private_fields_and_props.style            = underscore_pascal_case_style

dotnet_naming_rule.do_interfaces.severity                       = error
dotnet_naming_rule.do_interfaces.symbols                        = interfaces
dotnet_naming_rule.do_interfaces.style                          = interface_pascal_case_style

dotnet_naming_rule.do_type_params.severity                      = error
dotnet_naming_rule.do_type_params.symbols                       = type_params
dotnet_naming_rule.do_type_params.style                         = type_param_pascal_case_style

dotnet_naming_rule.do_simple_camel_cased.severity               = error
dotnet_naming_rule.do_simple_camel_cased.symbols                = simple_camel_cased
dotnet_naming_rule.do_simple_camel_cased.style                  = camel_case_style

###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = when_on_single_line:silent
csharp_style_expression_bodied_properties = when_on_single_line:silent
csharp_style_expression_bodied_indexers = when_on_single_line:silent
csharp_style_expression_bodied_accessors = when_on_single_line:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:silent
csharp_style_deconstructed_variable_declaration = false:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_prefer_switch_expression = false

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = events,indexers,local_functions,methods,properties,types
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
